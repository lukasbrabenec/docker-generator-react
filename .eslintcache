[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/store/reducers/rootReducer.ts":"2","/usr/src/app/src/App.tsx":"3","/usr/src/app/src/store/reducers/imageReducer.ts":"4","/usr/src/app/src/store/reducers/requestReducer.ts":"5","/usr/src/app/src/store/reducers/versionReducer.ts":"6","/usr/src/app/src/components/Form.tsx":"7","/usr/src/app/src/store/types/image/imageActionTypes.ts":"8","/usr/src/app/src/store/types/request/requestActionTypes.ts":"9","/usr/src/app/src/store/types/version/versionActionTypes.ts":"10","/usr/src/app/src/store/actions/requestActions.ts":"11","/usr/src/app/src/store/actions/versionActions.ts":"12","/usr/src/app/src/store/actions/imageActions.ts":"13","/usr/src/app/src/components/ImageList.tsx":"14","/usr/src/app/src/components/DockerEngineVersion.tsx":"15","/usr/src/app/src/components/image/ImageWrapper.tsx":"16","/usr/src/app/src/components/image/DependenciesDropdown.tsx":"17","/usr/src/app/src/components/image/Volumes.tsx":"18","/usr/src/app/src/components/image/Ports.tsx":"19","/usr/src/app/src/components/image/ImageVersionSelect.tsx":"20","/usr/src/app/src/components/image/Environments.tsx":"21","/usr/src/app/src/components/image/ExtensionsDropdown.tsx":"22"},{"size":753,"mtime":1611858315377,"results":"23","hashOfConfig":"24"},{"size":327,"mtime":1611857975452,"results":"25","hashOfConfig":"24"},{"size":1765,"mtime":1611853142817,"results":"26","hashOfConfig":"24"},{"size":2384,"mtime":1611840942477,"results":"27","hashOfConfig":"24"},{"size":7241,"mtime":1611854753176,"results":"28","hashOfConfig":"24"},{"size":720,"mtime":1611854844288,"results":"29","hashOfConfig":"24"},{"size":3264,"mtime":1611858016275,"results":"30","hashOfConfig":"24"},{"size":1484,"mtime":1611422227318,"results":"31","hashOfConfig":"24"},{"size":2562,"mtime":1611841096179,"results":"32","hashOfConfig":"24"},{"size":458,"mtime":1611839554209,"results":"33","hashOfConfig":"24"},{"size":4489,"mtime":1611858377648,"results":"34","hashOfConfig":"24"},{"size":791,"mtime":1611840911061,"results":"35","hashOfConfig":"24"},{"size":2068,"mtime":1611840829490,"results":"36","hashOfConfig":"24"},{"size":8473,"mtime":1611853301393,"results":"37","hashOfConfig":"24"},{"size":2339,"mtime":1611853156749,"results":"38","hashOfConfig":"24"},{"size":14745,"mtime":1611853677887,"results":"39","hashOfConfig":"24"},{"size":1626,"mtime":1611852983562,"results":"40","hashOfConfig":"24"},{"size":3955,"mtime":1611854701489,"results":"41","hashOfConfig":"24"},{"size":8447,"mtime":1611854624085,"results":"42","hashOfConfig":"24"},{"size":1344,"mtime":1611853337709,"results":"43","hashOfConfig":"24"},{"size":872,"mtime":1611853317885,"results":"44","hashOfConfig":"24"},{"size":1483,"mtime":1611853329717,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8nf85b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/index.tsx",[],["92","93","94","95","96"],"/usr/src/app/src/store/reducers/rootReducer.ts",[],"/usr/src/app/src/App.tsx",[],"/usr/src/app/src/store/reducers/imageReducer.ts",[],"/usr/src/app/src/store/reducers/requestReducer.ts",[],"/usr/src/app/src/store/reducers/versionReducer.ts",[],"/usr/src/app/src/components/Form.tsx",[],"/usr/src/app/src/store/types/image/imageActionTypes.ts",[],"/usr/src/app/src/store/types/request/requestActionTypes.ts",[],"/usr/src/app/src/store/types/version/versionActionTypes.ts",[],"/usr/src/app/src/store/actions/requestActions.ts",["97"],"import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { RootStateOrAny } from 'react-redux';\nimport {\n  Environment,\n  Extension,\n  Image,\n  ImageVersion,\n  Port,\n  RestartType,\n  Volume,\n} from '../types/image/imageTypes';\nimport { AppThunkAction, AppThunkDispatch } from '../types/root/rootState';\nimport { RequestState } from '../types/request/requestTypes';\nimport {\n  CHANGE_DEPENDENCIES,\n  CHANGE_DOCKER_VERSION,\n  CHANGE_ENVIRONMENTS,\n  CHANGE_EXTENSIONS,\n  CHANGE_PORTS,\n  CHANGE_RESTART_TYPE,\n  CHANGE_VOLUMES,\n  REMOVE_IMAGE_VERSION,\n  UPDATE_IMAGE_NAME,\n  UPDATE_IMAGE_VERSION,\n} from '../types/request/requestActionTypes';\n\nexport const changeProjectName = (projectName: string): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({ type: 'CHANGE_PROJECT_NAME', projectName });\n  };\n};\n\nexport const updateImageName = (\n  imageVersionID: number,\n  imageName: string,\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: UPDATE_IMAGE_NAME,\n      imageVersionID,\n      imageName,\n    });\n  };\n};\n\nexport const changeDockerVersion = (versionID: number): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({ type: CHANGE_DOCKER_VERSION, versionID });\n  };\n};\n\nexport const updateImageVersion = (\n  newImageVersion: ImageVersion,\n  previousImageVersionID: number | undefined,\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: UPDATE_IMAGE_VERSION,\n      newImageVersion,\n      previousImageVersionID,\n    });\n  };\n};\n\nexport const removeImageVersionInRequest = (\n  imageVersion: ImageVersion | undefined,\n  image: Image,\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({ type: REMOVE_IMAGE_VERSION, imageVersion, image });\n  };\n};\n\nexport const changeExtensions = (\n  imageVersionID: number,\n  extensions: Extension[],\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: CHANGE_EXTENSIONS,\n      imageVersionID,\n      extensions,\n    });\n  };\n};\n\nexport const changeEnvironments = (\n  imageVersionID: number,\n  environments: Environment[],\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: CHANGE_ENVIRONMENTS,\n      imageVersionID,\n      environments,\n    });\n  };\n};\n\nexport const changePorts = (\n  imageVersionID: number,\n  ports: Port[],\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({ type: CHANGE_PORTS, imageVersionID, ports });\n  };\n};\n\nexport const changeVolumes = (\n  imageVersionID: number,\n  volumes: Volume[],\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: CHANGE_VOLUMES,\n      imageVersionID,\n      volumes,\n    });\n  };\n};\n\nexport const changeRestartType = (\n  imageVersionID: number,\n  restartType: RestartType,\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: CHANGE_RESTART_TYPE,\n      imageVersionID,\n      restartType,\n    });\n  };\n};\n\nexport const changeDependencies = (\n  imageVersion: ImageVersion,\n  dependencies: Image[],\n): AppThunkAction => {\n  return (dispatch: AppThunkDispatch<RequestState>) => {\n    dispatch({\n      type: CHANGE_DEPENDENCIES,\n      imageVersion,\n      dependencies,\n    });\n  };\n};\n\nexport const generate = (): ThunkAction<\n  void,\n  RootStateOrAny,\n  {},\n  Action<string>\n> => {\n  return (dispatch: AppThunkDispatch, getState) => {\n    fetch('http://localhost:8080/api/v1/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ generate: getState().request }),\n    })\n      .then((res: Response) => {\n        if (!res.ok) {\n          throw new Error('Generation failed!');\n        }\n        return res.blob();\n      })\n      .then((data: Blob) => {\n        const url = window.URL.createObjectURL(new Blob([data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `${getState().request.projectName}.zip`);\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({\n          type: 'GENERATE_ERROR',\n          error: 'Generation failed!',\n        });\n      });\n  };\n};\n","/usr/src/app/src/store/actions/versionActions.ts",[],"/usr/src/app/src/store/actions/imageActions.ts",[],"/usr/src/app/src/components/ImageList.tsx",[],"/usr/src/app/src/components/DockerEngineVersion.tsx",[],"/usr/src/app/src/components/image/ImageWrapper.tsx",[],"/usr/src/app/src/components/image/DependenciesDropdown.tsx",[],"/usr/src/app/src/components/image/Volumes.tsx",[],"/usr/src/app/src/components/image/Ports.tsx",[],"/usr/src/app/src/components/image/ImageVersionSelect.tsx",[],"/usr/src/app/src/components/image/Environments.tsx",[],"/usr/src/app/src/components/image/ExtensionsDropdown.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":178,"column":9,"nodeType":"110","messageId":"111","endLine":178,"endColumn":20},"lines-around-directive",["112"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]